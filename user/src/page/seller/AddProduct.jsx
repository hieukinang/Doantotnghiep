import React, { useState, useEffect } from "react";
import SellerLayout from "../../component-seller-page/SellerLayout";
import axios from "axios";

const AddProduct = () => {
    const backendURL = import.meta.env.VITE_BACKEND_URL || "http://127.0.0.1:5000/api";
    const [product, setProduct] = useState({
        name: "",
        price: "",
        stock: "",
        category: "",
        description: "",
    });
    const [categories, setCategories] = useState([]);
    const [attributes, setAttributes] = useState({});
    const [imageFile, setImageFile] = useState(null);
    const [previewImage, setPreviewImage] = useState(null);
    const [message, setMessage] = useState("");

    // üîπ Load danh m·ª•c t·ª´ API
    useEffect(() => {
        const fetchCategories = async () => {
            try {
                const res = await axios.get(`${backendURL}/categories`);
                setCategories(res.data.data.docs);
            } catch (err) {
                console.error("L·ªói khi t·∫£i danh m·ª•c:", err);
            }
        };
        fetchCategories();
    }, [backendURL]);

    // üîπ C·∫≠p nh·∫≠t c√°c input th∆∞·ªùng
    const handleInputChange = (e) => {
        setProduct({ ...product, [e.target.name]: e.target.value });
    };

    // üîπ C·∫≠p nh·∫≠t ·∫£nh
    const handleImageChange = (e) => {
        const file = e.target.files[0];
        setImageFile(file);
        if (file) {
            setPreviewImage(URL.createObjectURL(file));
        }
    };

    // üîπ G·ª≠i form
    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const formData = new FormData();
            formData.append("name", product.name);
            formData.append("price", product.price);
            formData.append("stock", product.stock);
            formData.append("category", product.category);
            formData.append("description", product.description);
            if (imageFile) formData.append("image", imageFile);

            const res = await axios.post(`${backendURL}/products`, formData, {
                headers: {
                    "Content-Type": "multipart/form-data",
                },
            });

            setMessage("‚úÖ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!");
            console.log("‚úÖ D·ªØ li·ªáu g·ª≠i ƒëi:", formData);
            console.log("üì¶ Server tr·∫£ v·ªÅ:", res.data);

            // Reset form sau khi th√™m
            setProduct({
                name: "",
                price: "",
                stock: "",
                category: "",
                description: "",
            });
            setImageFile(null);
            setPreviewImage(null);

            // ·∫®n th√¥ng b√°o sau 2s
            setTimeout(() => setMessage(""), 2000);
        } catch (err) {
            console.error("‚ùå L·ªói khi th√™m s·∫£n ph·∫©m:", err);
            setMessage("‚ùå Th√™m s·∫£n ph·∫©m th·∫•t b·∫°i!");
        }
    };

    return (
        <SellerLayout title="Th√™m s·∫£n ph·∫©m">
            <div className="bg-white shadow rounded-lg p-6 max-w-3xl mx-auto">
                <h2 className="text-lg font-semibold mb-4">Th√™m s·∫£n ph·∫©m m·ªõi</h2>

                {message && (
                    <div className="mb-3 text-center text-sm font-medium text-green-600">
                        {message}
                    </div>
                )}

                <form onSubmit={handleSubmit} className="grid grid-cols-1 gap-4">
                    <input
                        name="name"
                        placeholder="T√™n s·∫£n ph·∫©m"
                        value={product.name}
                        onChange={handleInputChange}
                        className="border rounded px-3 py-2"
                        required
                    />

                    <input
                        type="number"
                        name="price"
                        placeholder="Gi√° (VND)"
                        value={product.price}
                        onChange={handleInputChange}
                        className="border rounded px-3 py-2"
                        required
                    />

                    <input
                        type="number"
                        name="stock"
                        placeholder="T·ªìn kho"
                        value={product.stock}
                        onChange={handleInputChange}
                        className="border rounded px-3 py-2"
                        required
                    />

                    <select
                        name="category"
                        value={product.category}
                        onChange={handleInputChange}
                        className="border rounded px-3 py-2 w-full"
                        required
                    >
                        <option value="">-- Ch·ªçn danh m·ª•c --</option>
                        {categories?.map((cate) => (
                            <option key={cate._id || cate.id} value={cate.name}>
                                {cate.name}
                            </option>
                        ))}
                    </select>

                    {/* üîπ Ch·ªçn ·∫£nh t·ª´ m√°y */}
                    <div>
                        <label className="block mb-1 text-gray-700 font-medium">·∫¢nh s·∫£n ph·∫©m</label>
                        <input
                            type="file"
                            accept="image/*"
                            onChange={handleImageChange}
                            className="border rounded px-3 py-2 w-full"
                        />
                        {previewImage && (
                            <img
                                src={previewImage}
                                alt="Xem tr∆∞·ªõc ·∫£nh"
                                className="mt-3 w-32 h-32 object-cover rounded"
                            />
                        )}
                    </div>

                    <textarea
                        name="description"
                        rows="3"
                        placeholder="M√¥ t·∫£ s·∫£n ph·∫©m"
                        value={product.description}
                        onChange={handleInputChange}
                        className="border rounded px-3 py-2"
                    ></textarea>

                    <button
                        type="submit"
                        className="mt-4 bg-[#116AD1] text-white rounded px-4 py-2 hover:bg-[#0e57aa]"
                    >
                        Th√™m s·∫£n ph·∫©m
                    </button>
                </form>
            </div>
        </SellerLayout>
    );
};

export default AddProduct;
